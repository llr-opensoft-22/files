{
    "swagger": "2.0",
    "info": {
      "description": "This is a simple Flask server.",
      "version": "1.0.0",
      "title": "Flask Server"
    },
    "host": "127.0.0.1:5000/",
    "basePath": "",
    "tags": [
      {
        "name": "order",
        "description": "everything about order"
      }
    ],
    "schemes": [
      "http",
      "https"
    ],
    "paths": {
        "/delivery":{
            "get": {
              "tags": [
                "delivery"
              ],
              "summary": "get all delivery",
              "description": "",
              "operationId": "getAllDelivery",
              "parameters": [],
              "responses": [
                {
                  "200": {
                    "description": "ok",
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Delivery"
                      }
                    }
                  }
                }
              ],
              "security": []
            },
            "post": {
              "tags": [
                "delivery"
              ],
              "summary": "Create delivery",
              "operationId": "createDelivery",
              "produces": [
                "application/xml",
                "application/json"
              ],
              "parameters": [
                {
                  "in": "body",
                  "name": "body",
                  "description": "Created user object",
                  "required": true,
                  "schema": {
                    "$ref": "#/definitions/Delivery"
                  }
                }
              ],
              "responses": {
                "default": {
                  "description": "successful operation"
                }
              }
            }
          },
          "/delivery/{deliveryid}": {
            "get": {
              "tags": [
                "delivery"
              ],
              "summary": "Find delivery by ID",
              "description": "Returns a single order",
              "operationId": "getOrderById",
              "produces": [
                "application/xml",
                "application/json"
              ],
              "parameters": [
                {
                  "name": "deliveryid",
                  "in": "path",
                  "description": "ID of order to return",
                  "required": true,
                  "type": "integer"
                }
              ],
              "responses": {
                "200": {
                  "description": "successful operation",
                  "schema": {
                    "type":"object",
                    "$ref": "#/definitions/Delivery"
                  }
                },
                "400": {
                  "description": "Invalid ID supplied"
                },
                "404": {
                  "description": "Order not found"
                }
              }
            },
            "put": {
              "tags": [
                "delivery"
              ],
              "summary": "put delivery by ID",
              "description": "Returns a single order",
              "operationId": "getOrderById",
              "produces": [
                "application/xml",
                "application/json"
              ],
              "parameters": [
                {
                  "name": "deliveryid",
                  "in": "path",
                  "description": "ID of order to return",
                  "required": true,
                  "type": "integer"
                }
              ],
              "responses": {
                "200": {
                  "description": "successful operation"
                },
                "400": {
                  "description": "Invalid ID supplied"
                },
                "404": {
                  "description": "Order not found"
                }
              }
            },
            "delete": {
              "tags": [
                "delivery"
              ],
              "summary": "delete delivery by ID",
              "description": "Returns a single order",
              "operationId": "getOrderById",
              "produces": [
                "application/xml",
                "application/json"
              ],
              "parameters": [
                {
                  "name": "deliveryid",
                  "in": "path",
                  "description": "ID of order to return",
                  "required": true,
                  "type": "integer"
                }
              ],
              "responses": {
                "200": {
                  "description": "successful operation"
                },
                "400": {
                  "description": "Invalid ID supplied"
                },
                "404": {
                  "description": "Order not found"
                }
              }
            }
          }
    },
    "securityDefinitions": {
      "petstore_auth": {
        "type": "oauth2",
        "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
        "flow": "implicit",
        "scopes": {
          "write:pets": "modify pets in your account",
          "read:pets": "read your pets"
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "definitions": {
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "name of the item"
          },
          "price": {
            "type": "integer",
            "formate": "int32"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#definitions/Item"
            }
          },
          "userid":{
            "type":"integer"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "completed": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "Delivery":{
        "type":"object",
        "properties":{
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userid":{
            "type":"integer",
            "format":"int32"
          },
          "orderid":{
            "type":"integer",
            "format":"int32"
          },
          "price":{
            "type":"integer",
            "format":"int32"
          },
          "status":{
            "type":"string"
          }
        },
        "xml": {
          "name": "Delivery"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "active": {
            "type": "string",
            "format": "string",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }